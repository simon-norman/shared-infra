export enum AwsResourceTypes {
	vpc = "vpc",
	vpn = "vpn",
	vpnEndpoint = "vpn-endpoint",
	ec2 = "ec2",
	vpnAuthRule = "vpn-auth-rule",
	networkAssociation = "network-assc",
	cluster = "cluster",
	loadBalancer = "lb",
	httpsCertificate = "https-certificate",
	route53Zone = "route53-zone",
	dnsRecord = "dns-record",
	dnsARecord = "dns-a-record",
	securityGroup = "sec-group",
	lbListener = "lb-listener",
	databaseInstance = "db",
	subnetGroup = "subnet-gp",
	lbListenerRule = "lb-listener-rule",
	fargateService = "fargate-service",
	taskDefinition = "task-def",
	targetGroup = "tg",
	serviceContainer = "service-container",
	user = "user",
	role = "role",
	rolePolicy = "role-policy",
	userLoginProfile = "user-login-profile",
	accessKey = "access-key",
	userGroupMembership = "group-membership",
	userGroup = "user-group",
	policyAttachment = "policy-attachment",
	permissionsPolicy = "permissions-policy",
	imageRepository = "image-repository",
	image = "image",
	lambda = "lambda",
	queuedLambda = "queued-lambda",
	sqs = "sqs",
	eventSourceMapping = "event-source-mapping",
	secret = "secret",
	rdsParamGroup = "rds-param-group",
	datadogDbMonitoringAgent = "datadog-db-monitoring-agent",
	fusionAuthServer = "fusion-auth-server",
	apiGatewayLambda = "api-gateway-lambda",
	apiGateway = "api-gateway",
	apiGatewayDomainName = "api-gateway-domain-name",
	apiGatewayIntegration = "api-gateway-integration",
	apiGatewayRoute = "api-gateway-route",
	apiGatewayMethod = "api-gateway-method",
	apiGatewayStage = "api-gateway-stage",
	apiGatewayDeployment = "api-gateway-deployment",
	lambdaPermission = "lambda-permission",
	apiGatewayMapping = "api-gateway-mapping",
	scheduledLambda = "scheduled-lambda",
	eventRule = "event-rule",
	eventTarget = "event-target",
}
